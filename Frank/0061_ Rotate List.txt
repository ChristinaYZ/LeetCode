/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || k == 0) return head;

        // length of the list
        int count = 1;
        ListNode curr = head;
        while (curr.next != null) {
            count++;
            curr = curr.next;
        }

        // rotate part length
        k = k % count;

        if (k == 0) return head;

        ListNode tail = head;
        for (int i = 1; i < count - k; i++) {
            tail = tail.next;
        }

        curr.next = head;
        ListNode newHead = tail.next;
        tail.next = null;
        return newHead;
    }
}